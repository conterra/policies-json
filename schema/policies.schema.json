{
    "$schema": "http://json-schema.org/schema#",
    "$id": "https://raw.githubusercontent.com/conterra/policies-json/1.4.0/schema/policies.schema.json",
    "definitions": {
        "id-name": {
            "type": "string",
            "pattern": "^[A-Za-z][A-Za-z0-9_-]*$",
            "patternErrorMessage": "Key must start with a letter. Additionally allowed characters: a-z, A-Z, 0-9, '_', '-'"
        },
        "property-replacement-value": {
            "type": "string",
            "pattern": "^\\$\\{[A-Za-z][A-Za-z0-9_.-]*\\}$",
            "defaultSnippets": [
                {
                    "label": "Property reference...",
                    "markdownDescription": "Reference to a value defined as property.",
                    "body": "${${1:property_key}}"
                }
            ]
        },
        "non-empty-string-or-reference": {
            "anyOf": [
                {
                    "type": "string",
                    "minLength": 1
                },
                {
                    "$ref": "#/definitions/property-replacement-value"
                }
            ]
        },
        "non-empty-string": {
            "type": "string",
            "minLength": 1
        },
        "unique-string-array": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/non-empty-string"
            },
            "$comment": "String array."
        },
        "unique-non-empty-string-array": {
            "allOf": [
                {
                    "$ref": "#/definitions/unique-string-array"
                },
                {
                    "type": "array",
                    "minItems": 1
                }
            ],
            "$comment": "Non empty string array."
        },
        "known-roles-type": {
            "type": "string",
            "enum": ["enhancedSecurity_any", "enhancedSecurity_authenticated"],
            "markdownEnumDescriptions": [
                "Any user, even users not signed in.",
                "Any user signed in to the portal organization."
            ]
        },
        "policy-roles-type": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/non-empty-string-or-reference",
                        "defaultSnippets": [
                            {
                                "label": "Role name...",
                                "body": "${1:rolename}"
                            }
                        ]
                    },
                    {
                        "$ref": "#/definitions/known-roles-type"
                    }
                ]
            },
            "description": "List of role IDs that should be able to access the defined layers."
        },
        "policy-layers-type": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/non-empty-string-or-reference",
                        "defaultSnippets": [
                            {
                                "label": "Layer ID...",
                                "body": "${1:layer_id}"
                            }
                        ],
                        "examples": ["0", "0-2"]
                    },
                    {
                        "type": "string",
                        "enum": ["*"],
                        "markdownEnumDescriptions": ["Allow access to *any* layer."]
                    }
                ]
            },
            "minItems": 1,
            "description": "List of layer IDs to grant access to as defined by a map service. Supports individual IDs, intervals, or '*' for 'any layer'."
        },
        "policy-restrictions-type": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/non-empty-string",
                "defaultSnippets": [
                    {
                        "label": "Restriction reference...",
                        "body": "${1:restriction_key}"
                    }
                ]
            },
            "description": "List of restriction IDs defined in the top-level 'restrictions' array of this file.",
            "markdownDescription": "List of restriction IDs defined in the top-level `restrictions` array of this file."
        },
        "policy-type": {
            "type": "object",
            "additionalProperties": false,
            "required": ["layers", "roles"],
            "properties": {
                "layers": {
                    "$ref": "#/definitions/policy-layers-type"
                },
                "roles": {
                    "$ref": "#/definitions/policy-roles-type"
                },
                "restrictions": {
                    "$ref": "#/definitions/policy-restrictions-type"
                }
            },
            "defaultSnippets": [
                {
                    "body": {
                        "layers": ["$1"],
                        "roles": []
                    }
                }
            ],
            "examples": [{}]
        },
        "policies-type": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/policy-type"
            }
        },
        "fallback-policy-type": {
            "type": "object",
            "description": "A policy chosen by security.manager if no other policies match a request.",
            "additionalProperties": false,
            "required": ["layers"],
            "properties": {
                "layers": {
                    "$ref": "#/definitions/policy-layers-type"
                },
                "restrictions": {
                    "$ref": "#/definitions/policy-restrictions-type"
                }
            },
            "defaultSnippets": [
                {
                    "body": {
                        "layers": ["$1"]
                    }
                }
            ],
            "examples": [{}]
        },
        "restriction-type": {
            "type": "object",
            "discriminator": {
                "propertyName": "type"
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/spatial-restriction-type"
                },
                {
                    "$ref": "#/definitions/field-restriction-type"
                },
                {
                    "$ref": "#/definitions/feature-restriction-type"
                },
                {
                    "$ref": "#/definitions/readonly-restriction-type"
                }
            ],
            "errorMessage": {
                "discriminator": "\"type\" must be one of \"spatial\", \"field\", \"feature\" or \"readonly\""
            }
        },
        "field-restriction-type": {
            "type": "object",
            "description": "A field restriction limiting access to available fields.",
            "required": ["type"],
            "defaultSnippets": [
                {
                    "label": "Field restriction...",
                    "description": "Adds a new field restriction hiding specified fields of a layer.",
                    "body": {
                        "type": "field",
                        "hiddenfields": ["${1:field_name}"]
                    }
                },
                {
                    "label": "Field restriction...",
                    "description": "Adds a new field restriction showing specified fields of a layer.",
                    "body": {
                        "type": "field",
                        "allowedfields": ["${1:field_name}"]
                    }
                }
            ],
            "oneOf": [
                {
                    "type": "object",
                    "required": ["type", "hiddenfields"],
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "field",
                            "suggestSortText": "a"
                        },
                        "hiddenfields": {
                            "$ref": "#/definitions/unique-non-empty-string-array",
                            "description": "List of field names as defined for a map service layer or table."
                        }
                    }
                },
                {
                    "type": "object",
                    "required": ["type", "allowedfields"],
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "field",
                            "suggestSortText": "a"
                        },
                        "allowedfields": {
                            "$ref": "#/definitions/unique-string-array",
                            "description": "List of field names as defined for a map service layer or table."
                        }
                    }
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "const": "field",
                    "suggestSortText": "a"
                }
            }
        },
        "spatial-restriction-type": {
            "type": "object",
            "description": "A spatial restriction limiting access to a certain area.",
            "required": ["type", "featuretypeurl", "featurequery"],
            "defaultSnippets": [
                {
                    "label": "Spatial restriction...",
                    "description": "Adds a new spatial restriction limiting access to a certain area.",
                    "body": {
                        "type": "spatial",
                        "featuretypeurl": "${1:https://myserver:6443/arcgis/rest/services/folder1/service1/FeatureServer/0}",
                        "featurequery": "${2:state = 'California'}"
                    }
                }
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "const": "spatial",
                    "suggestSortText": "a"
                },
                "featuretypeurl": {
                    "$ref": "#/definitions/non-empty-string",
                    "examples": [
                        "https://myserver:6443/arcgis/rest/services/folder1/service1/FeatureServer/0",
                        "/folder1/service1/FeatureServer/0"
                    ],
                    "description": "URL that points to feature service layer. A relative reference is allowed."
                },
                "featurequery": {
                    "$ref": "#/definitions/non-empty-string",
                    "examples": ["state = 'California'", "state like 'C%'", "state in ['California', 'Nevada']"],
                    "description": "A definition query that selects the features of a feature layer defined by 'featuretypeurl'. These features define the allowed area.",
                    "markdownDescription": "A definition query that selects the features of a feature layer defined by `featuretypeurl`. These features define the allowed area."
                },
                "operation": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": ["intersect"],
                            "markdownEnumDescriptions": [
                                "Restrict access to features that are inside or intersect the allowed area."
                            ]
                        },
                        {
                            "$ref": "#/definitions/property-replacement-value"
                        }
                    ],
                    "doNotSuggest": true,
                    "description": "Spatial operation for restriction area. Should be set to `intersect`.",
                    "markdownDescription": "Spatial operation for restriction area. Should be set to `intersect`."
                }
            }
        },
        "feature-restriction-type": {
            "type": "object",
            "description": "A feature restriction limiting access to features matching a certain query.",
            "additionalProperties": false,
            "required": ["type", "query"],
            "defaultSnippets": [
                {
                    "label": "Feature restriction...",
                    "description": "Adds a new feature restriction limiting access to features matching a certain query.",
                    "body": {
                        "type": "feature",
                        "query": "$1"
                    }
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "const": "feature",
                    "suggestSortText": "a"
                },
                "query": {
                    "$ref": "#/definitions/non-empty-string",
                    "description": "A definition expression (WHERE clause) that selects the allowed features.",
                    "examples": ["country = 'Germany'", "country like 'G%'", "country in ['Germany', 'France']"]
                }
            }
        },
        "readonly-restriction-type": {
            "type": "object",
            "description": "A restriction denying 'edit' operations on feature layers.",
            "additionalProperties": false,
            "required": ["type"],
            "defaultSnippets": [
                {
                    "label": "Readonly restriction...",
                    "description": "Adds a new readonly restriction denying 'edit' operations on feature layers.",
                    "body": {
                        "type": "readonly"
                    }
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "const": "readonly"
                }
            }
        },
        "restriction-definitions-type": {
            "type": "object",
            "description": "Enumeration of restrictions by name. Can be referenced by policies.",
            "propertyNames": {
                "$ref": "#/definitions/id-name"
            },
            "additionalProperties": {
                "$ref": "#/definitions/restriction-type"
            },
            "examples": [{}]
        },
        "properties-type": {
            "type": "object",
            "description": "Enumeration of properties. Can be referenced as '${property_key}' in other values.",
            "markdownDescription": "Enumeration of properties. Can be referenced as `${property_key}` in other values.",
            "additionalProperties": {
                "type": "string",
                "description": "A property that can  be referenced as '${property_key}' in other values.",
                "markdownDescription": "A property that can be referenced as `${property_key}` in other values."
            },
            "propertyNames": {
                "$ref": "#/definitions/id-name"
            },
            "defaultSnippets": [
                {
                    "label": "New property...",
                    "body": {
                        "${1:key}": "${2:value}"
                    }
                }
            ],
            "examples": [{}]
        },
        "user-info-service-type": {
            "type": "object",
            "description": "A service used to fetch additional user information. This information allows the definition of user-specific permissions.",
            "additionalProperties": false,
            "required": ["url"],
            "defaultSnippets": [
                {
                    "label": "User info service...",
                    "description": "Adds properties of a user info service.",
                    "body": {
                        "enabled": true,
                        "url": "https://localhost:3333",
                        "insecure": false,
                        "headers": {
                            "Authorization": "Bearer 123"
                        }
                    }
                }
            ],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables (true) or disables (false) fetching of user attributes via the service."
                },
                "url": {
                    "$ref": "#/definitions/non-empty-string",
                    "description": "URL that points to the user info service."
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Allows (true) or disallows (false) connections to insecure HTTPS endpoints."
                },
                "headers": {
                    "type": "object",
                    "description": "Enumeration of HTTP headers.",
                    "additionalProperties": {
                        "type": "string",
                        "description": "A HTTP header."
                    },
                    "propertyNames": {
                        "pattern": "^[A-Za-z0-9_-]+$"
                    },
                    "defaultSnippets": [
                        {
                            "label": "Headers...",
                            "body": {
                                "Authorization": "Bearer 123"
                            }
                        }
                    ]
                }
            }
        },
        "extensions-type": {
            "type": "object",
            "description": "Extensions by name.",
            "additionalProperties": false,
            "properties": {
                "userInfoService": {
                    "$ref": "#/definitions/user-info-service-type"
                }
            }
        }
    },
    "type": "object",
    "title": "Policy JSON",
    "required": [],
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "type": "string"
        },
        "properties": {
            "$ref": "#/definitions/properties-type"
        },
        "restrictions": {
            "$ref": "#/definitions/restriction-definitions-type"
        },
        "fallbackPolicy": {
            "$ref": "#/definitions/fallback-policy-type"
        },
        "policies": {
            "$ref": "#/definitions/policies-type"
        },
        "extensions": {
            "$ref": "#/definitions/extensions-type"
        }
    }
}
